name: LWJGL Build

on:
  workflow_dispatch:
  push:
    branches:
      - master

env:
  AWS_DEFAULT_REGION: us-east-1
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  S3_PARAMS: --cache-control "public,must-revalidate,proxy-revalidate,max-age=0"

jobs:
  linux:
    name: Linux
    runs-on: ubuntu-latest
    container:
      image: centos:7
    strategy:
      fail-fast: false
      matrix:
        ARCH: [x64]
        include:
          - ARCH: x64
            HOST: x86_64-pc-linux-gnu
    steps:
      - run: |
          yum -y install https://packages.endpointdev.com/rhel/7/os/x86_64/endpoint-repo.x86_64.rpm
          yum -y install git
        name: Upgrade git
      - uses: actions/checkout@v3
        with:
          fetch-depth: 3
      - run: |
          yum -y install epel-release
          yum -y update
        name: Configure yum
      - run: |
          yum -y install centos-release-scl
          yum -y install devtoolset-11-gcc-c++
          yum -y install autoconf automake libtool awscli
        name: Install build dependencies
      - run: |
          source scl_source enable devtoolset-11 || true
          curl -L https://ftpmirror.gnu.org/autoconf/autoconf-2.71.tar.gz | tar -xz
          (cd autoconf-2.71; ./configure; make; make install)
        name: Install autoconf 2.71
      - run: |
          source scl_source enable devtoolset-11 || true
          ./autogen.sh
          CFLAGS="-g0 -O2 -U_FORTIFY_SOURCE -D_FORTIFY_SOURCE=0" ./configure --host=${{matrix.HOST}}
        name: Configure build
      - run: |
          source scl_source enable devtoolset-11 || true
          make
          strip hwloc/.libs/libhwloc.so
        name: Build
      - run: aws s3 cp hwloc/.libs/libhwloc.so s3://lwjgl-build/nightly/linux/${{matrix.ARCH}}/ $S3_PARAMS
        name: Upload artifact
      - run: |
          git config --global --add safe.directory $PWD
          git log --first-parent --pretty=format:%H HEAD~2..HEAD~1 > libhwloc.so.git
          aws s3 cp libhwloc.so.git s3://lwjgl-build/nightly/linux/${{matrix.ARCH}}/ $S3_PARAMS
        name: Upload git revision

  linux-cross:
    name: Linux Cross
    runs-on: ubuntu-latest
    container:
      image: ${{matrix.CONTAINER}}
    strategy:
      fail-fast: false
      matrix:
        ARCH: [arm32, arm64, riscv64]
        include:
          # -----
          - ARCH: arm32
            CROSS_ARCH: armhf
            CONTAINER: ubuntu:18.04
            PACKAGES: gcc-arm-linux-gnueabihf libc6-dev-armhf-cross
            CC: PKG_CONFIG_PATH=${PKG_CONFIG_PATH}:${CMAKE_SYSROOT}/usr/lib/arm-linux-gnueabihf/pkgconfig CC=arm-linux-gnueabihf-gcc
            HOST: arm-unknown-linux-gnueabihf
            STRIP: arm-linux-gnueabihf-strip
          # -----
          - ARCH: arm64
            CROSS_ARCH: arm64
            CONTAINER: ubuntu:18.04
            PACKAGES: gcc-aarch64-linux-gnu libc6-dev-arm64-cross
            CC: PKG_CONFIG_PATH=${PKG_CONFIG_PATH}:${CMAKE_SYSROOT}/usr/lib/aarch64-linux-gnu/pkgconfig CC=aarch64-linux-gnu-gcc
            HOST: aarch64-unknown-linux-gnu
            STRIP: aarch64-linux-gnu-strip
          # -----
          - ARCH: riscv64
            CROSS_ARCH: riscv64
            CONTAINER: ubuntu:20.04
            PACKAGES: gcc-riscv64-linux-gnu libc6-dev-riscv64-cross
            CC: PKG_CONFIG_PATH=${PKG_CONFIG_PATH}:${CMAKE_SYSROOT}/usr/lib/riscv64-linux-gnu/pkgconfig CC=riscv64-linux-gnu-gcc
            HOST: riscv64-unknown-linux-gnu
            STRIP: riscv64-linux-gnu-strip
    env:
      LWJGL_ARCH: ${{matrix.ARCH}}
    steps:
      - run: |
          apt-get -y update
          apt-get -y install software-properties-common wget
          apt-get -y install --reinstall ca-certificates
          apt-get -y update
          apt-get -y upgrade
          wget https://apt.kitware.com/keys/kitware-archive-latest.asc
          apt-key add kitware-archive-latest.asc
          add-apt-repository -y 'deb https://apt.kitware.com/ubuntu/ bionic main'
          add-apt-repository -y ppa:git-core/ppa
        name: Update apt repositories
        if: ${{ matrix.CONTAINER == 'ubuntu:18.04' }}
      - run: |
          apt-get -y update
          DEBIAN_FRONTEND=noninteractive apt-get -yq install awscli git
        name: Upgrade git
      - uses: actions/checkout@v3
        with:
          fetch-depth: 3
      - run: DEBIAN_FRONTEND=noninteractive apt-get -yq install autoconf make libtool ${{matrix.PACKAGES}}
        name: Install dependencies
      - run: |
          sed -i 's/deb http/deb [arch=amd64,i386] http/' /etc/apt/sources.list
          grep "ubuntu.com/ubuntu" /etc/apt/sources.list | tee /etc/apt/sources.list.d/ports.list
          sed -i 's/amd64,i386/${{matrix.CROSS_ARCH}}/' /etc/apt/sources.list.d/ports.list
          sed -i 's#http://.*/ubuntu#http://ports.ubuntu.com/ubuntu-ports#' /etc/apt/sources.list.d/ports.list
          dpkg --add-architecture ${{matrix.CROSS_ARCH}}
          apt-get update
        name: Prepare cross-compilation
      - run: |
          ./autogen.sh
          ${{matrix.CC}} CFLAGS="-g0 -O2 -U_FORTIFY_SOURCE -D_FORTIFY_SOURCE=0" ./configure --host=${{matrix.HOST}}
        name: Configure build
      - run: |
          make
          ${{matrix.STRIP}} hwloc/.libs/libhwloc.so
        name: Build
      - run: aws s3 cp hwloc/.libs/libhwloc.so s3://lwjgl-build/nightly/linux/${{matrix.ARCH}}/ $S3_PARAMS
        name: Upload artifacts
      - run: |
          git config --global --add safe.directory $(pwd)
          git log --first-parent --pretty=format:%H HEAD~2..HEAD~1 > libhwloc.so.git
          aws s3 cp libhwloc.so.git s3://lwjgl-build/nightly/linux/${{matrix.ARCH}}/ $S3_PARAMS
        name: Upload git revision

  macos:
    name: macOS
    runs-on: macos-latest
    strategy:
      fail-fast: false
      matrix:
        ARCH: [x64, arm64]
        include:
          - ARCH: x64
            CC: MACOSX_DEPLOYMENT_TARGET=10.9 CFLAGS="-g0 -O2 -mmacosx-version-min=10.9" LDFLAGS=-mmacosx-version-min=10.9
            HOST: x86_64-apple-darwin13
          - ARCH: arm64
            CC: MACOSX_DEPLOYMENT_TARGET=11.0 CFLAGS="-g0 -O2 -target aarch64-apple-darwin -arch arm64 -mmacosx-version-min=11.0" LDFLAGS="-target aarch64-apple-darwin -arch arm64 -mmacosx-version-min=11.0"
            HOST: aarch64-apple-darwin20
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 3
      - run: brew install automake
        name: Install dependencies
      - run: |
          ./autogen.sh
          ${{matrix.CC}} ./configure --host=${{matrix.HOST}}
        name: Configure build
      - run: |
          make
          strip -u -r hwloc/.libs/libhwloc.dylib
        name: Build
      - run: |
          aws s3 cp hwloc/.libs/libhwloc.dylib s3://lwjgl-build/nightly/macosx/${{matrix.ARCH}}/ $S3_PARAMS
        name: Upload artifacts
      - run: |
          git log --first-parent --pretty=format:%H HEAD~2..HEAD~1 > libhwloc.dylib.git
          aws s3 cp libhwloc.dylib.git s3://lwjgl-build/nightly/macosx/${{matrix.ARCH}}/ $S3_PARAMS
        name: Upload git revision

  windows:
    name: Windows
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        ARCH: [x86, x64, arm64]
        include:
          - ARCH: x86
            PLATFORM: Win32
            HAS_X86: ON
          - ARCH: x64
            PLATFORM: x64
            HAS_X86: ON
          - ARCH: arm64
            PLATFORM: ARM64
            HAS_X86: OFF
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 3
      - run: cmake -B build -G "Visual Studio 17 2022" -A ${{matrix.PLATFORM}} -DLWJGL_HAS_X86=${{matrix.HAS_X86}} -DHWLOC_ENABLE_TESTING=OFF -DHWLOC_SKIP_LSTOPO=ON -DHWLOC_SKIP_TOOLS=ON -DHWLOC_SKIP_INCLUDES=ON -DHWLOC_WITH_OPENCL=OFF -DHWLOC_WITH_CUDA=OFF -DBUILD_SHARED_LIBS=ON -DCMAKE_C_FLAGS_RELEASE="/MT /EHsc /Ox /GF /Gy /GS- /DNDEBUG" -DCMAKE_SHARED_LINKER_FLAGS_RELEASE="/OPT:REF,ICF /INCREMENTAL:NO" contrib/windows-cmake
        shell: cmd
        name: Configure build
      - run: cmake --build build --config Release
        shell: cmd
        name: Build
      - run: aws s3 cp build\Release\hwloc.dll s3://lwjgl-build/nightly/windows/${{matrix.ARCH}}/ ${{env.S3_PARAMS}}
        shell: cmd
        name: Upload artifacts
      - run: |
          git log --first-parent --pretty=format:%%H HEAD~2..HEAD~1 > hwloc.dll.git
          aws s3 cp hwloc.dll.git s3://lwjgl-build/nightly/windows/${{matrix.ARCH}}/ ${{env.S3_PARAMS}}
        shell: cmd
        name: Upload git revision
